upstream backend {
    # use the actual server IP here, or if separate, a proxy server
    server __LIVE_SERVER_IP__:__LIVE_SERVER_PORT__;
}

# assuming this path exists
proxy_cache_path /srv/cache levels=1:2 keys_zone=assets:48m max_size=20g inactive=2h;

server {
    #listen __NGINX_LISTEN_PORT__ ;
    #listen [::]:__NGINX_LISTEN_PORT__ ;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name __CACHE_SERVER_FQDN_URL__;

    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # this can also be a Cloudflare origin certificate if you're using CF
    # ssl_certificate /etc/ssl/cert.pem;
    # ssl_certificate_key /etc/ssl/certKey.pem;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        # required to pass auth headers correctly
        proxy_pass_request_headers on;
        # required to not make deferrals close the connection instantly
        proxy_http_version 1.1;
        proxy_pass http://backend;
    }

    # extra block for a caching proxy
    location /files/ {
        proxy_pass http://backend$request_uri;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache_lock on;
        proxy_cache assets;
        proxy_cache_valid 1y;
        proxy_cache_key $request_uri$is_args$args;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
    }
}
